# Generated by Django 4.0.1 on 2022-01-12 00:31

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProviderConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('exported_name', models.CharField(blank=True, max_length=256, null=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='DebugConfig',
            fields=[
                ('providerconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='suggestion_providers.providerconfig')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('suggestion_providers.providerconfig',),
        ),
        migrations.CreateModel(
            name='FixedConfig',
            fields=[
                ('providerconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='suggestion_providers.providerconfig')),
                ('value', models.CharField(max_length=256)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('suggestion_providers.providerconfig',),
        ),
        migrations.CreateModel(
            name='NullProviderConfig',
            fields=[
                ('providerconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='suggestion_providers.providerconfig')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('suggestion_providers.providerconfig',),
        ),
        migrations.CreateModel(
            name='RemoteSettingsConfig',
            fields=[
                ('providerconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='suggestion_providers.providerconfig')),
                ('bucket', models.CharField(blank=True, max_length=256, null=True)),
                ('collection', models.CharField(blank=True, max_length=256, null=True)),
                ('resync_interval', models.DurationField(blank=True, null=True)),
                ('suggestion_score', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('suggestion_providers.providerconfig',),
        ),
        migrations.CreateModel(
            name='WikiFruitConfig',
            fields=[
                ('providerconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='suggestion_providers.providerconfig')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('suggestion_providers.providerconfig',),
        ),
        migrations.CreateModel(
            name='TimeoutConfig',
            fields=[
                ('providerconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='suggestion_providers.providerconfig')),
                ('default_ttl', models.DurationField()),
                ('inner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='timeout', to='suggestion_providers.providerconfig')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('suggestion_providers.providerconfig',),
        ),
        migrations.CreateModel(
            name='StealthConfig',
            fields=[
                ('providerconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='suggestion_providers.providerconfig')),
                ('inner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stealth', to='suggestion_providers.providerconfig')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('suggestion_providers.providerconfig',),
        ),
        migrations.CreateModel(
            name='RedisCacheConfig',
            fields=[
                ('providerconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='suggestion_providers.providerconfig')),
                ('default_ttl', models.DurationField(blank=True, null=True)),
                ('default_lock_timeout', models.DurationField(blank=True, null=True)),
                ('inner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='redis_cache', to='suggestion_providers.providerconfig')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('suggestion_providers.providerconfig',),
        ),
        migrations.CreateModel(
            name='MultiplexerConfig',
            fields=[
                ('providerconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='suggestion_providers.providerconfig')),
                ('providers', models.ManyToManyField(related_name='multiplexer', to='suggestion_providers.ProviderConfig')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('suggestion_providers.providerconfig',),
        ),
        migrations.CreateModel(
            name='MemoryCacheConfig',
            fields=[
                ('providerconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='suggestion_providers.providerconfig')),
                ('default_ttl', models.DurationField(blank=True, null=True)),
                ('cleanup_interval', models.DurationField(blank=True, null=True)),
                ('max_removed_entries', models.IntegerField(blank=True, null=True)),
                ('default_lock_timeout', models.DurationField(blank=True, null=True)),
                ('inner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='memory_cache', to='suggestion_providers.providerconfig')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('suggestion_providers.providerconfig',),
        ),
        migrations.CreateModel(
            name='KeywordFilterConfig',
            fields=[
                ('providerconfig_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='suggestion_providers.providerconfig')),
                ('suggestion_blocklist', models.TextField()),
                ('inner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='keyword_filter', to='suggestion_providers.providerconfig')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('suggestion_providers.providerconfig',),
        ),
    ]
